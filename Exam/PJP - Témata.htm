<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="cs" lang="cs"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-2">
  <meta name="Keywords" content="programming techniques">
  <meta name="Author" content="Marek Bìhálek">
  <title>PJP - Témata</title>
  <link rel="stylesheet" href="PJP%20-%20T%C3%A9mata_soubory/style.css" type="text/css">
</head>
<body>
<div id="leftnav">
<div id="leftnav_top">Programovací jazyky a pøekladaèe</div>
<br>
<div id="leftmenu">
<li><a href="http://www.cs.vsb.cz/behalek/vyuka/pjp/index.php" title="Hlavní stránka a novinky">Úvodní stránka</a></li>
<div>&nbsp;</div>
<span class="menu_title">Pøedná¹ky</span>
<ul class="menu_items">
<li><a href="http://www.cs.vsb.cz/behalek/vyuka/pjp/prednasky/index.php" title="Osnova a texty pøedná¹ek">Osnova</a></li>
<li><a href="http://www.cs.vsb.cz/behalek/vyuka/pjp/skripta/index.php" title="Skripta [PDF]">Skripta</a></li>
</ul>
<span class="menu_title">Zkou¹ka</span>
<ul class="menu_items">
<li><a href="http://www.cs.vsb.cz/behalek/vyuka/pjp/prednasky/temata.php" title="Otázky ke zkou¹ce">Otázky ke zkou¹ce</a></li>
</ul>
<span class="menu_title">Cvièení</span>
<ul class="menu_items">
<li><a href="http://www.cs.vsb.cz/behalek/vyuka/pjp/cviceni/index.php" title="Úlohy pro cvièení">Úlohy</a></li>
</ul>
<span class="menu_title">Programming languages</span>
<ul class="menu_items">
<li><a href="http://www.cs.vsb.cz/behalek/vyuka/pjp/project1/index.php" title="Basic description of the project related to programming languages.">Guidelines</a></li>
</ul>
<span class="menu_title">Compilers</span>
<ul class="menu_items">
<li><a href="http://www.cs.vsb.cz/behalek/vyuka/pjp/project2/index.php" title="Basic information to the compiler project">Guidelines</a></li>
<li><a href="http://www.cs.vsb.cz/behalek/vyuka/pjp/project2/description.php" title="Language specification">Language specification</a></li>
</ul>
</div></div>

<div id="content">
<div id="main">

<h1>Témata ke zkou¹ce z pøedmìtu Programovací jazyky a pøekladaèe</h1>

<h3>Programovací jazyky - obecná otázka - 13 bodù</h3>

<ul class="list">
  <li>Popi¹te, co to je paradigma programování. Jaký je jeho vztah k 
programovacím jazykùm. Struènì charakterizujte tøi existující 
paradigmata programování.</li>
  <li>Èím se vyznaèují imperativní programovací jazyky? Co je odli¹uje 
od deklarativních programovacích jazykù? Uveïte tøi pøíklady 
imperativních programovacích jazykù.</li>
  <li>Èím se vyznaèují deklarativní programovací jazyky? Co je odli¹uje 
od imperativních programovacích jazykù? Uveïte tøi pøíklady 
deklarativních programovacích jazykù.</li>
  <li>Èím se vyznaèují obektovì orientované programovací jazyky? Na 
jakých základních principech jsou postaveny? Uveïte tøi pøiklady 
objektovì orientovaných programovacích jazykù.</li>
  <li>Èím se vyznaèují vy¹¹í programovací jazyky? V kterých oblastech se zásadnì li¹í od strojovì orientovaných programovacích jazykù?</li>
  <li>Co popisuje syntaxe a co sémantika programovacího jazyka? Uka¾te 
na pøíkladech. Jaké metody se pou¾ívají k popisu syntaxe a jaké k popisu
 sémantiky?</li>
  <li>Èím se vyznaèují skriptovací programovací jazyky? Jaké jsou 
typické oblasti, ve kterých se pou¾ívají? Uveïtì tøi pøíklady 
skriptovacích jazykù.</li>
  <li>Co to je typový systém? Jaké funkce typicky zaji¹»uje?</li>
  <li>Jaký je rozdíl mezi staticky a dynamicky typovanými programovacími jazyky? Uveïte pøíklad konkrétních jazykù z obou kategorií.</li>
  <li>Charakterizujte rozdíly mezi silnì a slabì typovanými programovacími jazyka. Demonstrujte na pøíkladì.</li>
</ul>  
  
<h3>Programovací jazyky - konkrétní otázka - 7 bodù</h3>
    
<ul class="list">
  <li>Èím se vyznaèují logické programovací jazyky? Uveïte nìjakého zástupce rodiny logických programovacích jazykù.</li>
  <li>Co to je Backus-Naur Form (BNF) a k èemu se pou¾ívá? Demonstrujte na pøíkladì!</li>
  <li>Co to je lambda kalkul a jaký je jeho vztah k funkcionálním programovacím jazykùm?</li>
  <li>Popi¹te, co to je PHP. V jaké oblasti se pou¾ívá? Charakterizujte 
hlavní rozdíly na úrovni jazyka mezi PHP a jazyky JAVA, C èi C++.</li>
  <li>Èím se  vyznaèují jazyky zalo¾ené na prototypech jako je napøíklad
 SELF? Èím se li¹í od jiných objektovì orientovaných programovacích 
jazykù?</li>
  <li>Co to je Extended Backus-Naur Form (EBNF) a k èemu se pou¾ívá? Demonstrujte na pøíkladì!</li>
  <li>Co to je líne vyhodnocování (lazy evaluation) programu? Èím se vyznaèuje a jaké výhody pøiná¹í?</li>
  <li>Co znamená, ¾e programovací jazyk je typovì bezpeèný? Demonstrujte na konkrétním pøíkladì.</li>
</ul>

<h3>Pøekladaèe - obecná otázka - 13 bodù</h3>
<ul class="list">
  <li>Popi¹te, jakými formálními prostøedky a metodami se popisuje lexikální a syntaktická struktura programovacího jazyka. </li>
  <li>Vysvìtlete pojem atributová pøekladová gramatika, uveïte, k èemu 
slou¾í, a popi¹te pravidla, jimi¾ se øídí pøedávání jednotlivých druhù 
atributù. </li>
  <li>Nakreslete schéma pøekladaèe s vyznaèením jednotlivých logických 
fází pøekladu. Popi¹te jednou vìtou funkci jednotlivých fází, uveïte 
formu dat na jejich vstupu a výstupu a u kaµdé z nich urèete typické 
chyby, které v nich mùµe pøekladaè hlásit.</li>
  <li>Popi¹te èinnost a strukturu jak kompilaèního tak interpretaèního pøekladaèe. Popi¹te výhody a nevýhody jednotlivých pøístupù. </li>
  <li>Popi¹te, co znamená prùchod pøi pøekladu a èím se li¹í 
jednorpùchodové a víceprùchodové pøekladaèe. Co musí platit, abychom 
mohli daný jazyk pøekládat jednoprùchodovým pøekladaèem?</li>
  <li>Popi¹te, co to je Just-In-Time pøekladaè a na jakém principu pracuje. Jaké jsou jeho výhody?</li>
  <li>Popi¹te co se provádí ve fázi syntaktické analýzy, co je vstupe a 
co výstupem v této logické fázi pøi pøekladu. Jaké metody se obecnì 
pou¾ívají pro syntaktickou analýzu?</li>
</ul>  

<h3>Pøekladaèe - konkrétní otázka - 7 bodù</h3>

<ul class="list">
  <li>Pomocí pseudokódu popi¹te algoritmus èinnosti lexikálního 
analyzátoru øízeného tabulkou pøechodù deterministického koneèného 
automatu. Pøedpokládejte, ¾e v koncovém stavu se mù¾e provést u¾ivatelem
 specifikovaná akce se zadaným èíslem.</li>
  <li>Popi¹te mo¾né zpùsoby vnitøní reprezentace programu v pøekladaèi a uka¾te na pøíkladech. </li>
  <li>Vysvìtlete princip zotavení po chybì v syntaktické analýze 
rekurzivním sestupem a jeho implementaci. Uveïte, jakým zpùsobem obvykle
 probíhá zotavení v rámci lexikální a sémantické analýzy.</li>
  <li>Vysvìtlete, k èemu slou¾í blokovì strukturovaná tabulka symbolù, a uveïte pøíklady její implementace.</li>
  <li>Uka¾te, jaký tvar má obecnì rozkladová tabulka pro LL(1) analyzátor, a popi¹te akce, které se v nich mohou vyskytnout.</li>
  <li>Vysvìtlete pojem aktivaèního záznamu a uka¾te, jakým zpùsobem je 
zaji¹tìn pøístup k parametrùm a promìnným funkce na rùzných úrovních 
zanoøení.</li>
  <li>Vysvìtlete, co to je tabulka symbolù. K èemu se pou¾ívá? Na pøíkladu demonstrujte.</li>
  <li>Jaké typy optimalizací znáte (na jakých úrovních mohou být 
provádìny)? Uka¾te konrétní pøíklad nìjaké optimalizace, kterou mù¾e 
pøekladaè provést. </li>
</ul>

<h3>Praktický pøíklad - 15 bodù</h3>

<ul class="list">

  <li>Sestavte LL(1) gramatiku popisující definici strutury. Definice struktury zaèíná klíèovým slovem <i>struct</i> následuje identifikátor a klíèové slovo <i>begin</i>.
 
  Potom je sekvence deklarací. Ty jsou oddìleny støedníkem. Za poslední 
deklarací mù¾e, ale nemusí být støedník. Definice struktury konèí 
klíèovým slovem <i>end</i>. 
  Jednotlivé deklarace zaèínají typem (jeden z dvojice <i>int, double</i>) a obsahují sekvenci identifikátorù oddìlených èárkou. Dobrou definici ukazuje následující pøíklad:
<pre>struct X begin
  int a,b,c;
  double x,y
end
</pre>
Výpoètem mno¾in FIRST a FOLLOW ovìøte, ¾e vytvoøená gramatika je opravdu LL(1)!
</li>
  <li>Pøeveïte následující gramatiku na LL(1) gramatiku tak, aby 
popisovala syntaxi regulárních výrazù. Operátor souètu a konkatenace 
jsou zleva asociativní,
   pøièem¾ nejvy¹¹í prioritu má operátor * a konkatenace má vìt¹í 
prioritu ne¾ souèet. Ovìøte, µe je výsledná gramatika typu LL(1). 
<pre>     E -&gt; E + E  |  E E  |  E *  |  ( E ) | a
</pre></li>
  <li>Vytvoøte LL(1) gramatiku pro jazyk, jeho¾ vìtami jsou 
bezkontextové gramatiky. Pøedpokládejte, µe pravidla gramatiky jsou od 
sebe oddìlena støedníkem
   a jsou tvoøena symboly n (neterminální symbol), t (terminální 
symbol), e (prázdné slovo), operátorem &#8216;|&#8217; a ¹ipkou &#8216;-&gt;&#8217;.
<pre>Pøíklad platné vìty:     
n -&gt; t n n | e ;    n -&gt; n t | t ;  n -&gt;  t | n | e;
</pre>
Ovìøte, ¾e vytvoøená gramatika je LL(1)!</li>
  <li>Vytvoøte LL(1) gramatiku popisující syntaxi deklarace hlavièky 
funkce s parametry v jazyce C. Typ parametrù nebo výsledku mù¾e být 
vytvoøen z typù int,
   double, ukazatel a pole. Do øe¹ení zahrnìte vícerozmìrná pole a 
násobné ukazatele. Ovìøte, ¾e vytvoøená gramatika je LL(1)!</li>
  <li>Vytvoøte  LL(1) gramatiku jazyka popisujícího jednu deklaraci 
promìnných v jazyce C. Uva¾ujte datové typy int, double a vícerozmìrná 
pole tìchto typù s
   uvedeným poètem prvkù, napø.
<pre>int x, arr1[10], arr2[4][5];
</pre>
Ovìøte, ¾e vytvoøená gramatika je LL(1)!</li>
  <li>Vypoètìte  pro následující  gramatiku mno¾iny  FIRST v¹ech pravých
 stran a FOLLOW v¹ech nonterminálù a uka¾te, zda je gramatika typu 
LL(1).                                                        
<pre>   S  -&gt; A B C | C A
   A  -&gt; a A   | C a | e
   B  -&gt; b B   | c
   C  -&gt; A b C | e
</pre></li>
  <li>Pøeveïte následující gramatiku na ekvivalentní LL(1) gramatiku. Uka¾te, ¾e je výsledná gramatika opravdu LL(1).
<pre>   P  -&gt;  N b | c
   L  -&gt;  L P | a
   N  -&gt;  L | L d P | a
</pre>
</li>
  <li>Vypoètìte mno¾iny First v¹ech pravých stran a Follow v¹ech 
nonterminálù pro následující gramatiku a ovìøte, zda je tato gramatika 
typu LL(1).
<pre>   S  -&gt;  S * E | E
   E  -&gt;  T R
   R  -&gt;  + T R | e
   T  -&gt;  ( S ) | T ? | i
</pre></li>
  <li>Pøeveïte následující gramatiku na ekvivalentní LL(1) gramatiku. Uka¾te, µe je výsledná gramatika opravdu LL(1).
<pre>   P  -&gt; i : R L
   L  -&gt; / R L  |  / n | e
   R  -&gt; i S
   S  -&gt; S i   |  e
</pre>
</li>
</ul>

<hr>
<table width="100%">
  <tbody><tr>
    <td><i>(c) Marek Bìhálek, FEI V©B-TU Ostrava</i></td><td><i>Desing: Miroslav Bene¹, FEI V©B-TU Ostrava</i></td>
    <td align="right">14. 2. 2019 19:34:28</td>
  </tr>
</tbody></table>
</div>
</div>


</body></html>